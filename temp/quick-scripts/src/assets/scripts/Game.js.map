{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","onLoad","groundY","y","height","spawnNewStar","score","timer","starDuration","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","update","dt","gameOver","enabled","gainScore","string","audioEngine","playEffect","stopAllActions","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       // this property quotes the  Prefab\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        //the random scale of disappearing time for stars\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n\r\n        //ground node for confirming the height of generated star's position\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        //player node for obtaining the jump height of the chracter and  controlling the movement of the main character\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        //score node for the game\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        }\r\n\r\n\r\n    },\r\n\r\n    \r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        //obtain anchor point of ground level on y axis\r\n        this.groundY = this.ground.y + this.ground.height / 2; \r\n        // generates a new star \r\n        this.spawnNewStar();\r\n        // initialize scoring\r\n        this.score = 0;\r\n        // initialize timer\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n    },\r\n\r\n    spawnNewStar: function () {\r\n        //generate a new node in the scene with preset template\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        //put newly added node under canvas ndode\r\n        this.node.addChild(newStar);\r\n        //set up a random position for star\r\n        newStar.setPosition(this.getNewStarPosition());   \r\n        newStar.getComponent('Star').game = this;\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // According to the position of the ground level and the main character's jump height, randomly obtain an anchor point\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // According to width of the screen, randomly obtain the anchor point of star on x axis\r\n        var maxX = this.node.width / 2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        //return to the anchor point of the star\r\n        return cc.v2(randX, randY);\r\n\r\n\r\n    },\r\n   \r\n\r\n   \r\n\r\n    update: function (dt) {\r\n        // update timer for each frame when a new star is not generated after exceeding duration\r\n        //invoke the logic of game failure\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            this.enabled = false;\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        //update words of score label\r\n        this.scoreDisplay.string = 'Score: ' + this.score;\r\n        // play the scoring soud effect\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n\r\n    },\r\n\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); // stop the jumping action\r\n        cc.director.loadScene('game');\r\n    }\r\n   \r\n   \r\n});\r\n"]}